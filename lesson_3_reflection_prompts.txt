When would you want to use a remote repository rather than keeping all your work
local?

   You would want to use a remote repository in that case when you want to develop/share software or something  by collaborating with multiple people from different locations, 
   
Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Your local repository might be in intermediate state of work and you wouldn't want to get into messy state by syncing with the remote repository unless you are ready to do.
    
Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forking is like creating a clone copy of the selected repository from another user or account in your github account. 
	Cloning is like creating a mirror image, copying all pieces of data including the meta-data on your local machine from 
	the remote repository hosted on github. 
	Brances are for to carry out experiment on a stable version of code to add new features or to modify existing functionality for some reasons like re-factoring
	 in your local environment. Once experiment is successful with respect to complete functionality, branched code can be merged back to master branch 
	 and later pushed it to remote repository. 

What is the benefit of having a copy of the last known state of the remote
stored locally?

    So it will be easy to merge the state of remote copy with the local changes made by analyzing them.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    SVN or similar software like Clearcase. I think GitHub is a more evolved concept over cloud storage for 
	effective and fast collaboration with multiple people across the world. In Git, we have a 2 step mechanism to commit to repository
	which could be helpful in submitting one logical change at a time. Additionally, we have a seperate branch for remote copy in local
	environment which is different from the local master branch. This would be helpful for syncing the remote code in local repository.
	In GitHub, users can create new branches, fork from other github account repositories and carry on development to either the
    forked repository or their own private copy of the repository in their respective accounts.	
	I am not aware of SVN having a counterpart like GitHub for effective collaborative and sharing mechanism like forking to all different share-holders.
	
When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Answered in one of the above questions.
